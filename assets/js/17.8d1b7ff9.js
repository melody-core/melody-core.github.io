(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{379:function(t,s,a){"use strict";a.r(s);var e=a(45),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"melody-core-leo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#melody-core-leo"}},[t._v("#")]),t._v(" @melody-core/leo")]),t._v(" "),a("p",[t._v("狮子座是旋律之主们基于commander开发的脚手架工具，它的能力来源于它集成的模板。它既可以是独立的命令行工具，也可以作为@melody-core/melody-cli的一个命令行套件。")]),t._v(" "),a("h2",{attrs:{id:"安装-及-使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-及-使用"}},[t._v("#")]),t._v(" 安装 及 使用")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你可以单独安装并使用它")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" global "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" @melody-core/leo\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# use")]),t._v("\n    leo\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or 将其作为melody-cli的一个套件, 我们更期望如此。")]),t._v("\n    melody "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" @melody-core/leo\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# use")]),t._v("\n    melody leo\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 终端log")]),t._v("\n    Usage: leo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    Options:\n    -V, --version   output the version number\n    -v, --version   查看当前版本\n    -h, --help      display "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("\n\n    Commands:\n    init                            初始化一个项目模板\n    list                            查看所有的项目模板\n    publish "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("templateName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   发布一个模板到模板仓库\n    \n")])])]),a("h2",{attrs:{id:"模板集成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板集成"}},[t._v("#")]),t._v(" 模板集成！")]),t._v(" "),a("blockquote",[a("p",[t._v("现在，如果你想集成一个模板，只需要运行一个命令即可一键发布")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 例如: 你想把当前路径所在的一个项目(比如叫react-test-app)，发布成一个叫react-template的模板")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /react-test-app 项目的根目录下")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行publish命令，后面跟着的是你对模板的命名")]),t._v("\n    leo publish react-template \n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果你不在模板项目目录下，你可以通过path参数——相对路径来指定将某个项目发布成模板。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# path参数默认为 ./ 即当前路径。")]),t._v("\n    leo publish react-template ./react-test-app\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);