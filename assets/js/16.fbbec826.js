(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{376:function(a,e,s){"use strict";s.r(e);var t=s(45),r=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"melody-core-holmes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#melody-core-holmes"}},[a._v("#")]),a._v(" @melody-core/holmes")]),a._v(" "),s("blockquote",[s("p",[a._v("🕵️ 福尔摩斯！为您的项目提供安全扫描服务！")])]),a._v(" "),s("h2",{attrs:{id:"_1-作为命令行工具使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-作为命令行工具使用"}},[a._v("#")]),a._v(" 1. 作为命令行工具使用")]),a._v(" "),s("p",[a._v("安装")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 我们更期望您可以通过 melody来安装它。")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" global "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" @melody-core/melody-cli\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 安装  ")]),a._v("\n   melody i @melody-core/holmes\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用-目标项目的根目录下运行")]),a._v("\n  melody holmes check\n")])])]),s("p",[a._v("当然，也可以直接安装和使用它。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("   "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" global "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v("  @melody-core/holmes\n")])])]),s("p",[a._v("使用")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 您可以在任意前端项目的根目录下运行")]),a._v("\nholmes check \n")])])]),s("h2",{attrs:{id:"_2-作为依赖包使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-作为依赖包使用"}},[a._v("#")]),a._v(" 2. 作为依赖包使用")]),a._v(" "),s("p",[a._v("安装")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("   "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v("  @melody-core/holmes\n")])])]),s("p",[a._v("使用")]),a._v(" "),s("div",{staticClass:"language-node extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("   const PackageSafeWorker  = require('@melody-core/holmes');\n   const packageSafeWorker = new PackageSafeWorker({\n       proPath   //参数，要检测项目的绝对路径\n   });\n   const result = await PackageSafeWorker.run();\n   console.log('项目依赖包安全检测结果：', result)\n")])])]),s("h2",{attrs:{id:"原理与设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理与设计"}},[a._v("#")]),a._v(" 原理与设计")]),a._v(" "),s("h3",{attrs:{id:"注意点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意点"}},[a._v("#")]),a._v(" 注意点")]),a._v(" "),s("p",[a._v("由于每个业务组项目的依赖安装方式不一样，会带来一定的差异：")]),a._v(" "),s("ul",[s("li",[a._v("yarn 生成 yarn.lock")]),a._v(" "),s("li",[a._v("npm 生成 package-lock.json")]),a._v(" "),s("li",[a._v("cnpm 不会生成锁文件")])]),a._v(" "),s("p",[a._v("因此关键点在于如何兼容这些安装方式所带来的差异性问题：")]),a._v(" "),s("ol",[s("li",[a._v("文件参数不一致，那么每一种最匹配的扫描方案都不一致")]),a._v(" "),s("li",[a._v("每种扫描方案的输出不一致；")])]),a._v(" "),s("h3",{attrs:{id:"兼容性方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#兼容性方案"}},[a._v("#")]),a._v(" 兼容性方案")]),a._v(" "),s("h4",{attrs:{id:"扫描方式兼容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扫描方式兼容"}},[a._v("#")]),a._v(" 扫描方式兼容")]),a._v(" "),s("blockquote",[s("p",[a._v("Yarn/npm/retirejs.js")])]),a._v(" "),s("ul",[s("li",[a._v("yarn audit")]),a._v(" "),s("li",[a._v("npm audit")]),a._v(" "),s("li",[a._v("retirejs.js 用来解决无锁文件的情况")])]),a._v(" "),s("p",[a._v("因此，holmes其实就是会先检测项目根目录下是否含有锁文件，如果含有，则用对应的yarn/np audit来获取检测数据。如果没有，则会使用retirejs来兼容无锁文件下的检测(根据package.json里的依赖项)。")])])}),[],!1,null,null,null);e.default=r.exports}}]);