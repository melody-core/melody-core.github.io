(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{374:function(a,t,s){"use strict";s.r(t);var e=s(45),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"cmc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cmc"}},[a._v("#")]),a._v(" CMC")]),a._v(" "),s("blockquote",[s("p",[a._v("CMC(CLI MANAGE CLI)! 命令行集成管理工具！")])]),a._v(" "),s("p",[a._v("[toc]")]),a._v(" "),s("h2",{attrs:{id:"背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[a._v("#")]),a._v(" 背景")]),a._v(" "),s("blockquote",[s("p",[a._v("小明是某大厂的程序员，他善于使用各种命令行工具来实现他的某些需求———但随着公司以及社区的命令行工具安装的越来越多，他开始烦恼于如何记忆他们、管理他们； 而小明正在烦恼的时候，却不知道隔壁业务线又产出了新的命令行工具。")])]),a._v(" "),s("ul",[s("li",[a._v("小明期望有一个统一的入口，来集成和管理所有命令")]),a._v(" "),s("li",[a._v("小明期望能方便的统一观察所有公司内产出的命令行工具，而不是单独的一个个了解它们。")])]),a._v(" "),s("p",[a._v("而小明期望的，就是CMC的存在意义。")]),a._v(" "),s("h2",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[a._v("#")]),a._v(" 概念")]),a._v(" "),s("h3",{attrs:{id:"命令行管理工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令行管理工具"}},[a._v("#")]),a._v(" 命令行管理工具")]),a._v(" "),s("blockquote",[s("p",[a._v("CMC，是用来管理命令行工具的命令行工具。这么说可能有点绕，也许下面的例子可以让你明白:")])]),a._v(" "),s("p",[a._v("@melody-core/melody-cli 是 音巢组织(作者所在的npm开源组织) 的CMC工具，它可以方便的集成与管理任意其他的命令行工具————比如@melody-core/leo,一个脚手架命令行工具。 "),s("br"),a._v("\n@melody-core/melody-leo 是可以单独被安装和使用的，就像这样:")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 安装")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" global "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" @melody-core/leo\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用它的命令去初始化一个项目")]),a._v("\n    leo init \n")])])]),s("p",[a._v("但我们更倾向于用melody-cli去管理和使用它,就像这样:")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用melody-cli安装它，前提是安装了@melody-core/melody-cli即可。")]),a._v("\n    melody "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" @melody-core/melody-leo\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用leo脚手架   安装后，leo已被集成为melody-cli的扩展命令")]),a._v("\n    melody leo init \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 更新leo")]),a._v("\n    melody update leo\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 卸载leo")]),a._v("\n    melody remove leo\n")])])]),s("p",[a._v("也就是说，melody本身是个命令行集成与管理工具，它本身只包含对套件(也就是它安装的命令行工具)的增删改查的功能，但它可以基于已安装的套件去扩展它的能力和命令。")]),a._v(" "),s("h3",{attrs:{id:"套件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#套件"}},[a._v("#")]),a._v(" 套件")]),a._v(" "),s("p",[a._v("每个符合melody-cli套件规范的npm包，都可以被视作为它的套件。套件可以理解为插件，可以扩展melody的命令，从而扩展melody的功能。当然，它们本身也都可以被当作一个独立的包。")]),a._v(" "),s("h2",{attrs:{id:"设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计"}},[a._v("#")]),a._v(" 设计")]),a._v(" "),s("p",[a._v("于是CMC的功能设计就自然而然了：")]),a._v(" "),s("ul",[s("li",[a._v("对套件的增删改查命令  =>  集成与管理功能")]),a._v(" "),s("li",[a._v("来自于套件的扩展命令  =>  扩展能力基于安装的套件")])]),a._v(" "),s("p",[a._v("于是它的命令设计就：")]),a._v(" "),s("h3",{attrs:{id:"基础命令-增删改查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础命令-增删改查"}},[a._v("#")]),a._v(" 基础命令 - 增删改查")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("命令")]),a._v(" "),s("th",[a._v("描述")]),a._v(" "),s("th",[a._v("具体使用")]),a._v(" "),s("th",[a._v("补充")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("search")]),a._v(" "),s("td",[a._v("查询套件")]),a._v(" "),s("td",[a._v("melody search [package]")]),a._v(" "),s("td",[a._v("不填参数时，默认查找所有音巢组织官方套件")])]),a._v(" "),s("tr",[s("td",[a._v("install")]),a._v(" "),s("td",[a._v("安装套件")]),a._v(" "),s("td",[a._v("melody install <package>")]),a._v(" "),s("td",[a._v("package必填，例：melody install @melody-core/leo")])]),a._v(" "),s("tr",[s("td",[a._v("remove")]),a._v(" "),s("td",[a._v("删除套件")]),a._v(" "),s("td",[a._v("melody remove <package>")]),a._v(" "),s("td",[a._v("package必填，例：melody remove @melody-core/leo")])]),a._v(" "),s("tr",[s("td",[a._v("update")]),a._v(" "),s("td",[a._v("更新套件")]),a._v(" "),s("td",[a._v("melody update [package]")]),a._v(" "),s("td",[a._v("不填参数时，默认更新所有已安装的套件")])])])]),a._v(" "),s("h3",{attrs:{id:"扩展命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展命令"}},[a._v("#")]),a._v(" 扩展命令")]),a._v(" "),s("p",[a._v("当安装了任意命令行套件之后，CMC就应该集成了套件的命令功能。"),s("br")]),a._v(" "),s("p",[a._v("当然，你可能想给CMC增加更便捷的功能，比如自动同步版本进行更新等。")]),a._v(" "),s("h2",{attrs:{id:"核心技术实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心技术实现"}},[a._v("#")]),a._v(" 核心技术实现")]),a._v(" "),s("ul",[s("li",[a._v("commander")])]),a._v(" "),s("blockquote",[s("p",[a._v("commander是一个开源的、强大的命令行开发依赖。有关它的时候，你可以从它的官方文档了解： https://github.com/tj/commander.js/blob/HEAD/Readme_zh-CN.md")])]),a._v(" "),s("p",[a._v("用commander去开发一个命令行工具，将会大大提升你的效率。尤其是前端，因为你可能更为熟悉node技术栈。")]),a._v(" "),s("h2",{attrs:{id:"开发自定义套件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发自定义套件"}},[a._v("#")]),a._v(" 开发自定义套件")]),a._v(" "),s("p",[a._v("那么基于commander开发的套件，都可以集成为CMC的子命令。")]),a._v(" "),s("h2",{attrs:{id:"cmc工具示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cmc工具示例"}},[a._v("#")]),a._v(" CMC工具示例")]),a._v(" "),s("p",[a._v("也许你可以尝试使用@melody-core/melody-cli,你会发现集成/管理命令行工具将会变得极其简单。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 全局安装它即可")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" global "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" @melody-core/melody-cli\n\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("wxy@melodyWxydeMacBook-Pro dragonSlaying % melody\nUsage: melody "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\nOptions:\n  -v, --version      查看当前版本\n  -h, --help         display "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v("\n\nCommands:\n  search             列出官方所有套件\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("package"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("  安装套件\n  remove "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("package"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("   删除套件\n  update "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("package"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("   更新套件\n  leo                初始化项目的脚手架命令工具\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("     display "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v("\n\nwxy@melodyWxydeMacBook-Pro dragonSlaying % melody search\n检索完毕"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("\n┌─────────┬────────────────────┬─────────┬──────────────────────────────┬──────────┐\n│ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" │       plugin       │ version │             desc             │ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("  │\n├─────────┼────────────────────┼─────────┼──────────────────────────────┼──────────┤\n│    "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("    │ "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'@melody-core/leo'")]),a._v(" │ "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'1.0.8'")]),a._v(" │ "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'初始化项目的脚手架命令工具'")]),a._v(" │ "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'已安装'")]),a._v(" │\n\n\nwxy@melodyWxydeMacBook-Pro dragonSlaying % melody update  @melody-core/leo     \n检索完毕\n套件: @melody-core/leo 已是最新版本，version: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0")]),a._v(".8\n\nwxy@melodyWxydeMacBook-Pro dragonSlaying % melody leo\nUsage: index "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\nOptions:\n  -V, --version   output the version number\n  -v, --version   查看当前版本\n  -h, --help      display "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v("\n\nCommands:\n  init            初始化一个项目模板\n  list            查看所有的项目模板\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  display "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v("\n\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);